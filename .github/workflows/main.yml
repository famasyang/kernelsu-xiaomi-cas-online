name: (GCC)Kernel Builder Xiaomi 10 Ultra

on: [push]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: Checkout zipper

      uses: actions/checkout@v2

      with:

        repository: lemniskett/AnyKernel3

        path: zipper

    - name: Integrate KernelSU

      run: |

        

        

        

        sudo apt install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip bc      

        git clone https://github.com/AcmeUI-Devices/android_kernel_xiaomi_cas
        
        cd android_kernel_xiaomi_cas
        
        git revert df8fe3eb1243c6c5ff5549cd7dcc7e14f63cbba1
        

        git clone https://github.com/CoolestEnoch/xiaomi-10-ultra-kernel

        

        mv xiaomi-10-ultra-kernel sourceA

  

        cd sourceA

        

        sudo cp ./libdebuginfod.so.1 /usr/lib

        

        sudo chmod 777 /usr/lib/libdebuginfod.so.1

       

        cd ..       

        mv android_kernel_xiaomi_cas source

  

        cd source

        

        

        echo "[+] Append kernel params to kprobes"

        echo "CONFIG_KPROBES=y" >> arch/arm64/configs/cas_defconfig

        echo "CONFIG_HAVE_KPROBES=y" >> arch/arm64/configs/cas_defconfig

        echo "CONFIG_KPROBE_EVENTS=y" >> arch/arm64/configs/cas_defconfig

        git clone https://github.com/tiann/KernelSU

        cd KernelSU

        git stash && git pull

        cd ..

        cp -r KernelSU/kernel drivers/kernelsu

        echo "[+] Add kernel su driver to Makefile"

        echo "obj-y += kernelsu/" >> drivers/Makefile

        

        echo "ccflags-y += -std=gnu11" >> drivers/kernelsu/Makefile

        echo "[+] Done."

        

        cd ..

        

        git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9

        

        mv aarch64-linux-android-4.9 gcc

        

        

        

        export ARCH=arm64

        export CROSS_COMPILE=$(pwd)/gcc/gcc-arm64-gcc-master/bin/aarch64-elf-

        export CROSS_COMPILE_ARM32=$(pwd)/gcc/gcc-arm-gcc-master/bin/arm-eabi-

        

        cd source

        make cas_defconfig

        make -j2


    - name: Upload Build
      uses: actions/upload-artifact@v3
      with:
        name: Image
        path: /home/runner/work/kernelsu-xiaomi-cas-online/kernelsu-xiaomi-cas-online/source/arch/arm64/boot/Image
        

    
